<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="13" failures="0" name="TestRunner.TestRunner" time="4.106" errors="4" skipped="0">
  <properties>
    <property name="idea.version" value="2022.2.2"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
    <property name="java.vm.version" value="25.202-b08"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="D:\Vinita PD\Vinita PD\Practice_QA_Cucumber_BDD"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="GB"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="D:\Vinita PD\Vinita PD\Practice_QA_Cucumber_BDD"/>
    <property name="java.runtime.version" value="1.8.0_202-b08"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\VINITA~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\plugins\maven\lib\maven-event-listener.jar"/>
    <property name="classworlds.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\plugins\maven\lib\maven3\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python312\Scripts\;C:\Python312\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Users\Vinita Malik\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Users\Vinita Malik\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Vinita Malik\AppData\Roaming\npm;."/>
    <property name="maven.conf" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\plugins\maven\lib\maven3/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\Vinita Malik"/>
    <property name="user.timezone" value="Europe/London"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="Vinita Malik"/>
    <property name="java.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\plugins\maven\lib\maven3\boot\plexus-classworlds-2.6.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\plugins\maven\lib\maven3\boot\plexus-classworlds.license;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\lib\idea_rt.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2022.2.2 install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_202"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\plugins\maven\lib\maven3"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="Logger Creation Functionality" name="Create Logger for MR_812P" time="1.37"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for MR_810T" time="0.303"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using Non-Hex 16 chars key" time="0.305"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using Non-Hex 16 chars key" time="0.295"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using 17 Hex Chars Key" time="0.323">
    <error message="A JSONArray text must start with &apos;[&apos; at 0 [character 1 line 1]" type="org.json.JSONException">org.json.JSONException: A JSONArray text must start with &apos;[&apos; at 0 [character 1 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.&lt;init&gt;(JSONArray.java:108)
	at org.json.JSONArray.&lt;init&gt;(JSONArray.java:161)
	at PageFactory.Implementation_Class.get_message_description(Implementation_Class.java:278)
	at StepDefinition.stepdefinition.messages(stepdefinition.java:87)
	at âœ½.response should contain message &quot;Hex id 0123456789AFBCDE1 couldn&apos;t be parsed&quot;(file:src/test/resources/feature/Test_3.feature:22)
</error>
    <system-out>
  @Logger_Functionality @Create_Logger_for_Type_1_and_Type_2_All_negative_cases
  Scenario Outline: Create Logger for Using 17 Hex Chars Key                                                                    # src/test/resources/feature/Test_3.feature:29
Request method:	POST
Request path:	https://sensor-data-ingestion.dev.skycell.ch/v1/lora/configuration
Proxy:			&lt;none&gt;
Request params:	&lt;none&gt;
Query params:	&lt;none&gt;
Form params:	&lt;none&gt;
Path params:	&lt;none&gt;
Multiparts:		&lt;none&gt;
Headers:		APIKEY= NNSXS.RPNRQUVEAQHYIBRJPYB5BMF36VT2E4ZIQWLCO6Y.ZP7FKSYX6J2XO2SRNBPHWQJHIBB5ZWTULHPI27N7C4IMQAKB6QYA
				Accept=*/*
				Content-Type=application/json
Cookies:		&lt;none&gt;
Body:
{
    &quot;loggerType&quot;: &quot;MR_812P&quot;,
    &quot;loggerNumber&quot;: &quot;0123456789AFBCDE1&quot;,
    &quot;baseInterval&quot;: &quot;600&quot;
}
Request method:	POST
Request path:	https://sensor-data-ingestion.dev.skycell.ch/v1/lora/configuration
Proxy:			&lt;none&gt;
Request params:	&lt;none&gt;
Query params:	&lt;none&gt;
Form params:	&lt;none&gt;
Path params:	&lt;none&gt;
Multiparts:		&lt;none&gt;
Headers:		APIKEY= NNSXS.RPNRQUVEAQHYIBRJPYB5BMF36VT2E4ZIQWLCO6Y.ZP7FKSYX6J2XO2SRNBPHWQJHIBB5ZWTULHPI27N7C4IMQAKB6QYA
				Accept=*/*
				Content-Type=application/json
Cookies:		&lt;none&gt;
Body:
{
    &quot;loggerType&quot;: &quot;MR_812P&quot;,
    &quot;loggerNumber&quot;: &quot;0123456789AFBCDE1&quot;,
    &quot;baseInterval&quot;: &quot;600&quot;
}
HTTP/1.1 201 Created
Content-Length: 0
Date: Sun, 26 Nov 2023 00:12:59 GMT
    Given Call lORA configuration API to create Logger using &quot;MR_812P&quot; and &quot;0123456789AFBCDE1&quot; against &quot;Using 17 Hex Chars Key&quot; # stepdefinition.Positive_Negative_cases(String,String,String)
    Then Return the response Body                                                                                               # stepdefinition.returningResponseBody()
StatusCode201
    Then user should get response status code as &quot;400&quot;                                                                          # stepdefinition.Invalid_cases(String)
    Then response should contain message &quot;Hex id 0123456789AFBCDE1 couldn&apos;t be parsed&quot;                                          # stepdefinition.messages(String)
      org.json.JSONException: A JSONArray text must start with &apos;[&apos; at 0 [character 1 line 1]
	at org.json.JSONTokener.syntaxError(JSONTokener.java:505)
	at org.json.JSONArray.&lt;init&gt;(JSONArray.java:108)
	at org.json.JSONArray.&lt;init&gt;(JSONArray.java:161)
	at PageFactory.Implementation_Class.get_message_description(Implementation_Class.java:278)
	at StepDefinition.stepdefinition.messages(stepdefinition.java:87)
	at ?.response should contain message &quot;Hex id 0123456789AFBCDE1 couldn&apos;t be parsed&quot;(file:src/test/resources/feature/Test_3.feature:22)

</system-out>
  </testcase>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using 20 Hex Chars Key" time="0.295"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using 0 chars Hex Key" time="0.299"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using 0 chars Hex Key" time="0.305"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using Invalid Logger Type" time="0.296"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Using without Logger Type" time="0.303"/>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Invalid Invalid Content Type" time="0.006">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at Common.ApiHelper.getResponseBody(ApiHelper.java:132)
	at PageFactory.Implementation_Class.returnResponseBody(Implementation_Class.java:58)
	at StepDefinition.stepdefinition.returningResponseBody(stepdefinition.java:37)
	at âœ½.Return the response Body(file:src/test/resources/feature/Test_3.feature:39)
</error>
    <system-out>
  @Invalid_Content_type
  Scenario Outline: Create Logger for Invalid &lt;Scenario&gt; # src/test/resources/feature/Test_3.feature:37
    Given Call lORA configuration API to create Logger using &quot;&lt;LoggerType&gt;&quot; and &quot;&lt;loggerNumber&gt;&quot; against &quot;&lt;Scenario&gt;&quot;
    Then Return the response Body
    Then user should get response status code as &quot;&lt;StatusCode&gt;&quot;
    Then response should contain error &quot;&lt;error&gt;&quot;

    Examples: 

  @Logger_Functionality @Invalid_Content_type
  Scenario Outline: Create Logger for Invalid Invalid Content Type                                                    # src/test/resources/feature/Test_3.feature:46
    Given Call lORA configuration API to create Logger using &quot;MR_812P&quot; and &quot;012345678&quot; against &quot;Invalid Content Type&quot; # stepdefinition.Positive_Negative_cases(String,String,String)
    Then Return the response Body                                                                                     # stepdefinition.returningResponseBody()
      java.lang.NullPointerException
	at Common.ApiHelper.getResponseBody(ApiHelper.java:132)
	at PageFactory.Implementation_Class.returnResponseBody(Implementation_Class.java:58)
	at StepDefinition.stepdefinition.returningResponseBody(stepdefinition.java:37)
	at ?.Return the response Body(file:src/test/resources/feature/Test_3.feature:39)

    Then user should get response status code as &quot;415&quot;                                                                # stepdefinition.Invalid_cases(String)
    Then response should contain error &quot;RESTEASY003065: Cannot consume content type&quot;                                  # stepdefinition.Invalid_Content_Type(String)
</system-out>
  </testcase>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Invalid Invalid API KEY" time="0.004">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at Common.ApiHelper.getResponseBody(ApiHelper.java:132)
	at PageFactory.Implementation_Class.returnResponseBody(Implementation_Class.java:58)
	at StepDefinition.stepdefinition.returningResponseBody(stepdefinition.java:37)
	at âœ½.Return the response Body(file:src/test/resources/feature/Test_3.feature:51)
</error>
    <system-out>
  @Invalid_Authorization
  Scenario Outline: Create Logger for Invalid &lt;Auth_Scenario&gt; # src/test/resources/feature/Test_3.feature:49
    Given Call lORA configuration API to create Logger using &quot;&lt;LoggerType&gt;&quot; and &quot;&lt;loggerNumber&gt;&quot; against &quot;&lt;Auth_Scenario&gt;&quot;
    Then Return the response Body
    Then user should get response status code as &quot;&lt;StatusCode&gt;&quot;

    Examples: 

  @Logger_Functionality @Invalid_Authorization
  Scenario Outline: Create Logger for Invalid Invalid API KEY                                                    # src/test/resources/feature/Test_3.feature:56
    Given Call lORA configuration API to create Logger using &quot;MR_810T&quot; and &quot;012345678&quot; against &quot;Invalid API KEY&quot; # stepdefinition.Positive_Negative_cases(String,String,String)
    Then Return the response Body                                                                                # stepdefinition.returningResponseBody()
      java.lang.NullPointerException
	at Common.ApiHelper.getResponseBody(ApiHelper.java:132)
	at PageFactory.Implementation_Class.returnResponseBody(Implementation_Class.java:58)
	at StepDefinition.stepdefinition.returningResponseBody(stepdefinition.java:37)
	at ?.Return the response Body(file:src/test/resources/feature/Test_3.feature:51)

    Then user should get response status code as &quot;401&quot;                                                           # stepdefinition.Invalid_cases(String)
</system-out>
  </testcase>
  <testcase classname="Logger Creation Functionality" name="Create Logger for Invalid Empty API KEy" time="0.002">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
	at Common.ApiHelper.getResponseBody(ApiHelper.java:132)
	at PageFactory.Implementation_Class.returnResponseBody(Implementation_Class.java:58)
	at StepDefinition.stepdefinition.returningResponseBody(stepdefinition.java:37)
	at âœ½.Return the response Body(file:src/test/resources/feature/Test_3.feature:51)
</error>
    <system-out>
  @Logger_Functionality @Invalid_Authorization
  Scenario Outline: Create Logger for Invalid Empty API KEy                                                    # src/test/resources/feature/Test_3.feature:57
    Given Call lORA configuration API to create Logger using &quot;MR_812P&quot; and &quot;012345678&quot; against &quot;Empty API KEy&quot; # stepdefinition.Positive_Negative_cases(String,String,String)
    Then Return the response Body                                                                              # stepdefinition.returningResponseBody()
      java.lang.NullPointerException
	at Common.ApiHelper.getResponseBody(ApiHelper.java:132)
	at PageFactory.Implementation_Class.returnResponseBody(Implementation_Class.java:58)
	at StepDefinition.stepdefinition.returningResponseBody(stepdefinition.java:37)
	at ?.Return the response Body(file:src/test/resources/feature/Test_3.feature:51)

    Then user should get response status code as &quot;401&quot;                                                         # stepdefinition.Invalid_cases(String)
</system-out>
  </testcase>
</testsuite>